// Generated by Selenium IDE
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using Xunit;
public class SuiteTests : IDisposable {
  public IWebDriver driver {get; private set;}
  public IDictionary<String, Object> vars {get; private set;}
  public IJavaScriptExecutor js {get; private set;}
  public SuiteTests()
  {
    driver = new ChromeDriver();
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<String, Object>();
  }
  public void Dispose()
  {
    driver.Quit();
  }
  public void StepsTextbox() 
  {
    driver.Navigate().GoToUrl("https://demoqa.com/elements");
    driver.Manage().Window.Size = new System.Drawing.Size(784, 824);
    driver.FindElement(By.CssSelector(".show #item-0 > .text")).Click();
    driver.FindElement(By.Id("userName")).Click();
    driver.FindElement(By.Id("userName")).SendKeys(vars["name"].ToString());
    driver.FindElement(By.Id("userEmail")).Click();
    driver.FindElement(By.Id("userEmail")).SendKeys(vars["email"].ToString());
    driver.FindElement(By.Id("currentAddress")).Click();
    driver.FindElement(By.Id("currentAddress")).SendKeys(vars["address"].ToString());
    driver.FindElement(By.Id("permanentAddress")).Click();
    driver.FindElement(By.Id("permanentAddress")).SendKeys(vars["permAddress"].ToString());
    driver.FindElement(By.Id("submit")).Click();
    Assert.Equal(driver.FindElement(By.Id("name")).Text, "Name:vars[\"name\"].ToString()");
    Assert.Equal(driver.FindElement(By.Id("email")).Text, "Email:vars[\"email\"].ToString()");
    Assert.Equal(driver.FindElement(By.CssSelector(".border > #currentAddress")).Text, "Current Address :vars[\"address\"].ToString()");
    Assert.Equal(driver.FindElement(By.CssSelector(".border > #permanentAddress")).Text, "Permananet Address :vars[\"permAddress\"].ToString()");
  }
  [Fact]
  public void Textbox() {
    // Test name: Textbox
    // Step # | name | target | value
    // 1 | store | Carlos Espinoza | name
    vars["name"] = "Carlos Espinoza";
    // 2 | store | email@email.com | email
    vars["email"] = "email@email.com";
    // 3 | store | Prueba #17 | address
    vars["address"] = "Prueba #17";
    // 4 | store | Prueba #18 | permAddress
    vars["permAddress"] = "Prueba #18";
    // 5 | run | StepsTextbox | 
    StepsTextbox();
  }
}
